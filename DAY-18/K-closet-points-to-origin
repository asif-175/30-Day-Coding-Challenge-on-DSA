import heapq

class Solution(object):
    def kClosest(self, points, k):
        """
        :type points: List[List[int]]
        :type k: int
        :rtype: List[List[int]]
        """
        # Max-heap to store the k closest points (using negative distance)
        max_heap = []

        for (x, y) in points:
            dist = -(x*x + y*y)  # Negative Euclidean distance squared
            heapq.heappush(max_heap, (dist, [x, y]))
            if len(max_heap) > k:
                heapq.heappop(max_heap)  # Remove the farthest point

        return [point for (_, point) in max_heap]
